function data_table = write_to_data_table(varargin)

if nargin == 0
    data_table = table([],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],...
        'VariableNames',{...
        't', ...
        'delta_t', ...
        'E', ...
        'pi', ...
        'pi_I', ...
        'pi_I_delta', ...
        'pi_delta', ...
        'pi_I_alpha', ...
        'pi_x',...
        'pi_t',...
        'pi_y',...
        'pi_x_r',...
        'pi_t_r',...
        'pi_y_r',...
        'pi_xty',...
        'pi_y_mi_r',...
        'RM', ...
        'J', ...
        'ge_estimate', ...
        'dt_z', ...
        'n_steps', ...
        'n_steps_lofi', ...
        'I_star', ...
        'I'});
else
    data_table = varargin{1};
    t = varargin{2};
    delta_t= varargin{3};
    E= varargin{4};
    error= varargin{5};
    RM= varargin{6};
    J= varargin{7};
    ge_estimates= varargin{8};
    dt_z_tplusdt= varargin{9};
    n_steps= varargin{10};
    n_steps_lofi= varargin{11};
    I_star = varargin{12};
    I = varargin{13};
    
    data_table = [data_table;
        table([t], ...
        [delta_t], ...
        [E], ...
        [error{2}.pi], ...
        [error{2}.pi_I], ...
        [error{2}.pi_I_delta], ...
        [error{2}.pi_delta], ...
        {error{2}.pi_I_alpha}, ...
        0,...
        0,...
        0,...
        0,...
        0,...
        0,...
        0,...
        {0},...
        {RM}, ...
        {J}, ...
        {ge_estimates}, ...
        {dt_z_tplusdt}, ...
        {n_steps}, ...
        {n_steps_lofi}, ...
        {I_star}, ...
        {I},...
        'VariableNames',data_table.Properties.VariableNames)...
        ];
end
